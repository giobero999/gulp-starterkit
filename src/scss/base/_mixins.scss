@mixin flexBox(
  $flex: flex,
  $wrap: null,
  $d: null,
  $jc: null,
  $ai: null
) {
  display: $flex;
  wrap: $wrap;
  flex-direction: $d;
  justify-content: $jc;
  align-items: $ai;
}

@mixin position(
  $position: absolute,
  $top: null,
  $right: null,
  $bottom: null,
  $left: null,
  $zIndex: null
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  z-index: $zIndex;
}

// colors
@mixin config-colors($prefix, $colors...) {
  @each $i in $colors {
    .#{$prefix}#{nth($i, 1)} {
      color: nth($i, 2) !important;
    }
  }
}
@include config-colors("color-",
  "primary" $primary,
  "hot"     $hot,
  "warm"    $warm,
  "cold"    $cold,
  "success" $success,
  "light"   #ffffff,
  "grey"    #9c9c9c
);
// end color

@mixin whiteSpace($overflow: hidden, $text-overflow: ellipsis, $white-space: nowrap) {
  overflow: $overflow;
  text-overflow: $text-overflow;
  white-space: $white-space;
}

.rounded-image {
  border-radius: 50%;
}

.default-input {
  border: 1px solid $border-color;
}

.full-width {
  width: 100% !important;
}

.hovered-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50px;
  width: 30px;
  height: 30px;
  cursor: pointer;
  &:hover {
    background: rgba(221, 221, 221, 0.38);
  }
}

.cursor-pointer {
  cursor: pointer;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

@include keyframes(boxShadow) {
  0% {
    box-shadow: 0 0 14px 5px rgba(255, 255, 255, 0.2);
    -webkit-box-shadow: 0 0 14px 5px rgba(255, 255, 255, 0.2);
  }
  50% {
    box-shadow: 0 0 8px 5px rgba(white, 0);
    -webkit-box-shadow: 0 0 0 5px rgba(white, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(white, 0);
    -webkit-box-shadow: 0 0 0 0 rgba(white, 0);
  }
}


.danger-input {
  border-color: $hot !important;
}

.danger-color {
  color: $hot !important;
}

.relative {
  position: relative;
}